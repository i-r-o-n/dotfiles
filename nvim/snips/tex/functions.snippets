global !p
from latex_environments import math, comment, env
endglobal

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
# snippet lim "limit" w
snippet lim "limit" A
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "partial derivative" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} \,d$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

# defined in Real Analysis preamble
snippet inp "inner product" iA 
\inp{$1}{$2}$0
endsnippet

#
# derivatives
#

# context "math()"
# snippet pd "partial derivative" iA
# \frac{\partial $1}{\partial $2}$0
# endsnippet

priority 10
snippet 'pd([a-zA-Z])([a-zA-Z])' "partial derivative" wrA
`!p if match.group(1) == match.group(2): # _th partial derivative as an operator
	snip.rv = "\\frac{\\partial}{\\partial " + match.group(2) + "}" 
else: 
	snip.rv = "\\frac{\\partial " + match.group(1) + "}{\\partial " + match.group(2) + "}" `
endsnippet

# priority 10
# context "math()"
# snippet 'pd([a-zA-Z]{2})' "partial derivative" wrA
# \\frac{\\partial `!p snip.rv = match.group(1)[0]`}{\\partial `!p snip.rv = match.group(1)[1]`}
# endsnippet

priority 100
context "math()"
snippet '(\d)pd([a-zA-Z])([a-zA-Z])' "nth partial derivative" wrA
\\frac{\partial^{`!p snip.rv = match.group(1)`} `!p snip.rv = match.group(2)`}{\partial `!p snip.rv = match.group(3)`^`!p snip.rv = match.group(1)`}
endsnippet


priority 100
context "math()"
snippet '(\d)mpd([a-zA-Z]+)' "nth mixed partial derivative" wr
`!p
digit = int(match.group(1))
letters = match.group(2)
    
    if len(letters) != digit:
        snip.rv = "Error: Number of letters does not match the digit"
        return

    numerator = " ".join(letters)
    denominator = " ".join([f"\\partial {letter}" for letter in letters])
    
    snip.rv = f"\\frac{{\\partial^{{{digit}}} {numerator}}}{{{denominator}}}"
`
endsnippet

priority 100
context "math()"
snippet 'pmd([a-zA-Z]{3})' "2nd order mixed partial derivative" rA
\\frac{\\partial^2 `!p snip.rv = match.group(1)[0]`}{\\partial `!p snip.rv = match.group(1)[1]` \\partial `!p snip.rv = match.group(1)[2]`}
endsnippet

